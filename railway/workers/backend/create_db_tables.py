#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQL —Å–∫—Ä–∏–ø—Ç–∞
"""
import os
from sqlalchemy import text, create_engine

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['DATABASE_URL'] = 'postgresql+psycopg://fanfiq:fanfiq@localhost:54390/fanfiq'

try:
    engine = create_engine(os.environ['DATABASE_URL'])
    with engine.connect() as conn:
        print('üöÄ Creating database tables...')

        # –ß–∏—Ç–∞–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º SQL —Å–∫—Ä–∏–ø—Ç
        with open('create_tables.sql', 'r', encoding='utf-8') as f:
            sql_script = f.read()

        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–∏–≥–Ω–æ—Ä–∏—Ä—É—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏)
        commands = []
        for cmd in sql_script.split(';'):
            cmd = cmd.strip()
            if cmd and not cmd.startswith('--'):
                commands.append(cmd)

        print(f'üìù Found {len(commands)} SQL commands to execute')

        for i, command in enumerate(commands, 1):
            if command:
                try:
                    conn.execute(text(command))
                    print(f'‚úÖ Executed command {i}/{len(commands)}')
                except Exception as cmd_e:
                    print(f'‚ö†Ô∏è  Command {i} failed: {cmd_e}')
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥

        conn.commit()
        print('‚úÖ Database tables created successfully!')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        result = conn.execute(text("SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name NOT LIKE 'pg_%' ORDER BY table_name"))
        tables = result.fetchall()
        table_names = [t[0] for t in tables]
        print(f'üìä Created tables: {table_names}')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ sites
        result = conn.execute(text("SELECT * FROM sites"))
        sites = result.fetchall()
        print(f'üåê Sites in database: {sites}')

except Exception as e:
    print(f'‚ùå Database creation failed: {e}')
    import traceback
    traceback.print_exc()
