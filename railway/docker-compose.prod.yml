version: "3.9"

services:
  # Railway будет автоматически создавать сервисы из папок
  # Этот файл для локального тестирования production сборки

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: fanfiq
      POSTGRES_USER: fanfiq
      POSTGRES_PASSWORD: fanfiq_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../infra/db/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fanfiq -d fanfiq"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: fanfiq
      RABBITMQ_DEFAULT_PASS: rabbitmq_password
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_running"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://fanfiq:fanfiq_password@postgres:5432/fanfiq
      - REDIS_URL=redis://redis:6379/0
      - PORT=8000
      - PYTHONPATH=/app
      - EXTERNAL_API_URL=http://localhost:8000
      - DEBUG=False
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - PORT=3000
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - api

  workers:
    build:
      context: ./workers
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://fanfiq:fanfiq_password@postgres:5432/fanfiq
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
