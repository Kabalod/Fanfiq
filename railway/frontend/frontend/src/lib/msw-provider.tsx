'use client'

import { useEffect, useState } from 'react'

export function MSWProvider({ children }: { children: React.ReactNode }) {
  const [mockingEnabled, setMockingEnabled] = useState(false)

  useEffect(() => {
    const initMocks = async () => {
      if (typeof window !== 'undefined') {
        const isDevelopment = process.env.NODE_ENV === 'development'
        const isMockingEnabledInDev = localStorage.getItem('msw-enabled') === 'true'

        // –í–∫–ª—é—á–∞–µ–º –º–æ–∫–∏ —Ç–æ–ª—å–∫–æ –≤ development —Ä–µ–∂–∏–º–µ, –µ—Å–ª–∏ —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–æ –≤ localStorage
        // –í production —Ä–µ–∂–∏–º–µ –º–æ–∫–∏ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º - —Ä–∞–±–æ—Ç–∞–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º API
        const shouldEnableMocks = isDevelopment && isMockingEnabledInDev

        if (shouldEnableMocks) {
          try {
            const { worker } = await import('@/mocks/browser')
            await worker.start({
              onUnhandledRequest: 'bypass',
            })
            setMockingEnabled(true)
            console.log('üîß MSW –º–æ–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã (development —Ä–µ–∂–∏–º)')
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MSW:', error)
          }
        } else {
          console.log('üì° –†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º API (production —Ä–µ–∂–∏–º)')
        }
      }
    }

    initMocks()
  }, [])

  return <>{children}</>
}

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –º–æ–∫–æ–≤
export function useMSWToggle() {
  const [enabled, setEnabled] = useState(false)

  useEffect(() => {
    setEnabled(localStorage.getItem('msw-enabled') === 'true')
  }, [])

  const toggle = () => {
    const newValue = !enabled
    localStorage.setItem('msw-enabled', newValue.toString())
    setEnabled(newValue)
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    window.location.reload()
  }

  return { enabled, toggle }
}
