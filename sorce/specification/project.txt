Попробуй еще в контекст вникнуть по тз будущего сервиса 

Техническое Задание: Поиск, Читалка, Парсеры
Этот документ описывает технические требования к разработке основных компонентов поисковой системы для фанфиков: модуля поиска, интегрированной читалки и парсеров для каждого из целевых сайтов.

I. Техническое задание на Поисковую Систему
Цель: Создать мощный и интуитивно понятный инструмент, который позволяет пользователям находить релевантный контент по множеству параметров на всех индексируемых ресурсах.

1.1. Пользовательский интерфейс (UI)
Строка поиска: Основное текстовое поле для ввода ключевых слов (название, автор, саммари).

Панель фильтров:

По умолчанию свернута, видна только кнопка "Фильтры".

При нажатии разворачивается панель, сгруппированная по категориям (см. п. 1.2).

Каждый фильтр представляет собой соответствующий элемент управления: выпадающий список, чекбокс, ползунок для диапазона (например, для количества слов).

Должна быть кнопка "Сбросить все фильтры".

Область результатов:

Результаты отображаются в виде карточек.

Содержимое карточки: Название, Автор, Фандом(ы), Рейтинг, Статус, Размер (количество слов), Краткое описание (саммари), Основные метки/предупреждения.

При наведении на карточку может появляться кнопка "Добавить в закладки".

Сортировка: Выпадающий список над результатами поиска со следующими опциями:

По релевантности (по умолчанию)

По дате обновления (сначала новые)

По популярности (лайки/kudos)

По количеству слов (сначала большие / сначала маленькие)

Пагинация: Стандартная навигация по страницам внизу области результатов.

1.2. Логика Фильтрации (Стандартизированные параметры)
Все параметры должны быть приведены к единому формату для всех сайтов.

Основные:

source_sites: Выбор сайтов для поиска (мультиселект: Ficbook, AO3, и т.д.).

query: Полнотекстовый поиск по названию, автору, описанию.

language: Язык работы (Русский, Английский, и т.д.).

Метаданные:

fandom: Фандом (мультиселект с автодополнением).

include_tags: Включить работы с тегами (персонажи, пейринги, метки).

exclude_tags: Исключить работы с тегами.

rating: Рейтинг (G, PG-13, R, NC-17/NC-21).

status: Статус работы (В процессе, Завершен, Заморожен).

category: Направленность (Джен, Гет, Слэш, Фемслэш, Смешанная).

warnings: Предупреждения (Смерть персонажа, Насилие, и т.д.).

Статистика:

word_count_min, word_count_max: Диапазон количества слов.

likes_min: Минимальное количество оценок (лайки/kudos).

comments_min: Минимальное количество комментариев.

date_updated_after, date_updated_before: Диапазон даты последнего обновления.

1.3. Бэкенд-требования (MVP)
API Endpoint: POST /api/v1/works/search

Request Body (JSON): Объект, содержащий все выбранные пользователем фильтры.

Response Body (JSON):

{
  "total_pages": 150,
  "current_page": 1,
  "results": [
    {
      "id": "work_123",
      "title": "Название фанфика",
      "author": "Имя автора",
      "fandoms": ["Fandom 1", "Fandom 2"],
      "summary": "Краткое описание...",
      "rating": "PG-13",
      "status": "Completed",
      "word_count": 50123,
      "tags": ["Tag A", "Tag B"]
    }
  ]
}

Технология: Для MVP используется PostgreSQL Full-Text Search. Запросы строятся динамически на основе полученных фильтров.

II. Техническое задание на Чилку (Reader)
Цель: Обеспечить комфортное и бесшовное чтение текста с любого из источников в едином, настраиваемом интерфейсе.

2.1. Пользовательский интерфейс (UI)
Область контента: Основная часть экрана, где отображается текст текущей главы. Текст должен быть очищен от всех посторонних элементов сайта-источника.

Верхняя панель (Header):

Название работы, название текущей главы.

Имя автора (кликабельно, ведет на поиск всех работ этого автора).

Кнопка "Назад" (возврат к результатам поиска или списку глав).

Нижняя панель (Footer) / Навигация:

Кнопки "Предыдущая глава" и "Следующая глава".

Выпадающий список для быстрого перехода к любой главе.

Отображение прогресса (например, "Глава 5 из 20").

Панель настроек: Вызывается по клику на иконку (например, шестеренка). Позволяет настраивать параметры из п. 2.3.

2.2. Функциональность
Загрузка глав: Текст глав подгружается асинхронно по мере навигации.

Сохранение прогресса: Система автоматически запоминает последнюю прочитанную главу для каждого пользователя и каждой работы.

Ссылка на оригинал: В футере или хедере должна быть четко видимая ссылка "Читать на сайте-источнике".

ИИ-функции (для Фазы 2): На верхней панели должны быть кнопки "Перевести" и "Озвучить текст (TTS)".

2.3. Настройки
Размер шрифта: Ползунок или кнопки A-/A+.

Тип шрифта: Выбор из 3-4 предустановленных шрифтов (например, с засечками, без засечек).

Фон и цвет текста: Предустановленные темы (Светлая, Темная/Ночная, Сепия).

III. Техническое задание на Парсеры
Цель: Разработать надежные и легко поддерживаемые модули для извлечения контента и метаданных с каждого целевого сайта и приведения их к единой стандартной структуре.

3.1. Общая стандартная структура данных (JSON)
Каждый парсер по завершении работы должен вернуть массив объектов следующей структуры:

{
  "original_url": "URL работы на исходном сайте",
  "title": "Название работы",
  "author_name": "Имя автора",
  "author_url": "URL профиля автора",
  "summary": "Описание/Саммари",
  "language": "Язык работы (ISO 639-1 код, e.g., 'ru', 'en')",
  "fandoms": ["Фандом 1", "Фандом 2"],
  "tags": ["Метка 1", "Пейринг А/Б", "Персонаж В"],
  "rating": "G", // G, PG-13, R, NC-17
  "category": "Gen", // Gen, Het, Slash, Femslash, Other
  "status": "In Progress", // In Progress, Completed, On Hiatus
  "warnings": ["Major Character Death", "Graphic Violence"],
  "word_count": 12345,
  "likes_count": 567, // kudos/лайки
  "comments_count": 89,
  "published_at": "YYYY-MM-DD",
  "updated_at": "YYYY-MM-DD",
  "chapters": [
    {
      "chapter_number": 1,
      "title": "Название первой главы",
      "content_html": "<html>...</html>" // Очищенный HTML-код главы
    }
  ]
}

3.2. Спецификации по сайтам
1. Ficbook.net
URL-структура: /readfic/XXXXXX

Целевые страницы: Основная страница работы. Текст всех глав доступен на одной странице, разделен по div-ам.

Маппинг полей:

Шапка работы (блок div.main-holder): Название, Автор, Фандомы, Пейринги/Персонажи, Рейтинг, Размер, Статус, Метки, Описание.

Статистика: Лайки, комментарии находятся в соответствующих блоках.

Главы: Каждая глава находится в блоке div.part, заголовок в h3.part-title.

2. Archiveofourown.org (AO3)
URL-структура: /works/XXXXXX

Целевые страницы: Основная страница работы. Для многоглавников может потребоваться переход по страницам глав или использование режима "Entire Work".

Маппинг полей:

Заголовок: h2.title

Автор: a[rel="author"]

Метаданные (блок dl.work.meta.group): Рейтинг, Предупреждения, Категория, Фандомы, Пейринги/Персонажи, Доп. теги. Система тегов очень развита, нужно собирать все.

Статистика (блок dl.stats): Дата, Kudos, Comments, Word Count.

Текст: Блок div#chapters.

3. Wattpad.com
URL-структура: /story/XXXXXX-title

Сложность: Высокая. Контент часто подгружается динамически (JavaScript). Может потребоваться использование headless-браузера (Playwright/Selenium).

Маппинг полей:

Метаданные: Информация разбросана по странице, часто в meta-тегах или в JSON-объектах внутри <script> тегов.

Текст глав: Подгружается при прокрутке или переходе по главам. Требует анализа сетевых запросов (XHR).

4. Fanfiction.net (FFN)
URL-структура: /s/XXXXXX/1/Title

Целевые страницы: Основная страница работы.

Маппинг полей:

Метаданные (блок div#profile_top): Название, Автор.

Описание: Блок div.xcontrast_txt.

Детали (внизу страницы): Рейтинг, Язык, Жанры, Персонажи, Количество слов, Даты. Теговая система примитивна.

Текст: Блок div#storytext.

5. Author.Today
URL-структура: /work/XXXXXX

Особенность: Много платного контента. Парсер должен уметь определять платные главы и либо пропускать их, либо собирать только общедоступную часть.

Маппинг полей: Структура сайта достаточно современная. Название в h1, метаданные в боковой панели или под заголовком.

6. Litnet.com / Litmarket.ru / selfpub.litres.ru
Общий паттерн: Это в первую очередь магазины электронных книг, а не архивы фанфиков. Фанфики там есть, но основной контент — платные ориджиналы.

Задача парсера: Аналогично Author.Today, нужно собирать метаданные, описание и бесплатные ознакомительные фрагменты. Полный текст платных работ недоступен.

7. Fanfics.me / Hogwartsnet.ru
Общий паттерн: Более старые, нишевые архивы. Структура HTML может быть устаревшей (табличная верстка).

Задача парсера: Потребуется более тщательный анализ HTML-структуры. Вероятность динамической подгрузки контента низкая, что упрощает задачу.